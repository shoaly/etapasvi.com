location / {
    return 404;
}

# переопредел€ем location, определЄнный в nginx_web.conf
# запрос к бэкендам за страницей
location @get_from_back
{
    expires 1h;
    
    # redirect to Full version or Mobile version controllers
    set $controller "frontend_www_etapasvi_com.php";
    # Mobile version has been requested
    if ($host ~ 'm.etapasvi.com$') {
        set $controller 'frontend_m_etapasvi_com.php';
    }
    rewrite ^(.*)$ /$controller$1 last;
}

# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
location ~ ^/(backbackend|backbackend_dev|frontend_dev_www_etapasvi_com|frontend_m_etapasvi_com|frontend_www_etapasvi_com|control)\.php(/|$) {
        
    expires 1h;
    charset utf-8;

    # настройка и передача управлени€ fastcgi
    # http://wiki.nginx.org/Symfony
    #include /usr/local/nginx/conf/fastcgi_params;

    fastcgi_param  QUERY_STRING       $query_string;
    fastcgi_param  REQUEST_METHOD     $request_method;
    fastcgi_param  CONTENT_TYPE       $content_type;
    fastcgi_param  CONTENT_LENGTH     $content_length;

    fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
    fastcgi_param  REQUEST_URI        $request_uri;
    fastcgi_param  DOCUMENT_URI       $document_uri;
    fastcgi_param  DOCUMENT_ROOT      $document_root;
    fastcgi_param  SERVER_PROTOCOL    $server_protocol;
    fastcgi_param  HTTPS              $https if_not_empty;

    fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
    fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;

    fastcgi_param  REMOTE_ADDR        $remote_addr;
    fastcgi_param  REMOTE_PORT        $remote_port;
    fastcgi_param  SERVER_ADDR        $server_addr;
    fastcgi_param  SERVER_PORT        $server_port;
    fastcgi_param  SERVER_NAME        $server_name;

    # PHP only, required if PHP was built with --enable-force-cgi-redirect
    fastcgi_param  REDIRECT_STATUS    200;
       
    # первое становитс€ значением переменной $fastcgi_script_name, а второе Ч значением переменной $fastcgi_path_info
    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    
    # проверка, существует ли скрипт, необходима, т.к.
    # если при передаче управлени€ fastcgi оказываетс€, что скрипта нет
    # тот не возвращает управление nginx, а отдаЄт пользователю свою 404 ошибку            
    if ( !-f $root/$fastcgi_script_name ) {
        return 404;
    }
    
    # does not work
    #fastcgi_index  frontend_www_etapasvi_com.php;
    fastcgi_param SCRIPT_FILENAME $root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
    fastcgi_param PATH_TRANSLATED $root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT $root;

    fastcgi_ignore_client_abort off;
    fastcgi_connect_timeout 180;
    fastcgi_send_timeout 180;
    fastcgi_read_timeout 250;
                                
    # без этого страницы не кэшируютс€
    fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
    fastcgi_cache_key "$host|$request_uri";
    fastcgi_cache fastcgi_cache;
    # случаи при которых будет использован старый кэш
    fastcgi_cache_use_stale updating error timeout invalid_header http_500;
    # ¬рем€ жизни кеша
    fastcgi_cache_valid 1m;
    fastcgi_cache_min_uses 1;
    # кэшируем редиректы и 404 страницу
    fastcgi_cache_valid 301 302 5m;
    fastcgi_cache_valid 404     5m;
    # скрывать никаких заголовков не надо
    #fastcgi_hide_header "Set-Cookie";
    # надо указывать обе директивы
    fastcgi_no_cache $cache_off;            
    fastcgi_cache_bypass $cache_off;    
    
    fastcgi_pass $fastcgi_pass;
}

# we don't allow to launch any PHP script
location ~ ^.*\.php.*$ {
    return 404;
}